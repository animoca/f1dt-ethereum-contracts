{
  "contractName": "SimpleSale",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "payoutWallet",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "erc20Token",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "purchaseId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ethPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "erc20Price",
          "type": "uint256"
        }
      ],
      "name": "PriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "purchaseId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "paymentToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "destination",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "Purchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldRelayHub",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRelayHub",
          "type": "address"
        }
      ],
      "name": "RelayHubChanged",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ETH_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_erc20Token",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_payoutWallet",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "_prices",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "ethPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "erc20Price",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getHubAddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "actualCharge",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "preRetVal",
          "type": "bytes32"
        }
      ],
      "name": "postRelayedCall",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        }
      ],
      "name": "preRelayedCall",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "relayHubVersion",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address payable",
          "name": "payoutWallet",
          "type": "address"
        }
      ],
      "name": "setPayoutWallet",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "erc20Token",
          "type": "address"
        }
      ],
      "name": "setErc20Token",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "purchaseId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "ethPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "erc20TokenPrice",
          "type": "uint256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "destination",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "purchaseId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "paymentToken",
          "type": "address"
        }
      ],
      "name": "purchaseFor",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "encodedFunction",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "acceptRelayedCall",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "mem",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "withdrawDeposits",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"payoutWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"erc20Token\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"purchaseId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"erc20Price\",\"type\":\"uint256\"}],\"name\":\"PriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"purchaseId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"Purchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldRelayHub\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRelayHub\",\"type\":\"address\"}],\"name\":\"RelayHubChanged\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"ETH_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_erc20Token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_payoutWallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"_prices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ethPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"erc20Price\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"encodedFunction\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"acceptRelayedCall\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"mem\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getHubAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"actualCharge\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"preRetVal\",\"type\":\"bytes32\"}],\"name\":\"postRelayedCall\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"}],\"name\":\"preRelayedCall\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"purchaseId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"}],\"name\":\"purchaseFor\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"relayHubVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20Token\",\"type\":\"address\"}],\"name\":\"setErc20Token\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"payoutWallet\",\"type\":\"address\"}],\"name\":\"setPayoutWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"purchaseId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"ethPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"erc20TokenPrice\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"withdrawDeposits\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"acceptRelayedCall(address,address,bytes,uint256,uint256,uint256,uint256,bytes,uint256)\":{\"details\":\"Ensures that only users with enough gas payment token balance can have transactions relayed through the GSN.\"},\"getHubAddr()\":{\"details\":\"Returns the address of the {IRelayHub} contract for this recipient.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postRelayedCall(bytes,bool,uint256,bytes32)\":{\"details\":\"See `IRelayRecipient.postRelayedCall`.     * This function should not be overriden directly, use `_postRelayedCall` instead.     * * Requirements:     * - the caller must be the `RelayHub` contract.\"},\"preRelayedCall(bytes)\":{\"details\":\"See `IRelayRecipient.preRelayedCall`.     * This function should not be overriden directly, use `_preRelayedCall` instead.     * * Requirements:     * - the caller must be the `RelayHub` contract.\"},\"relayHubVersion()\":{\"details\":\"Returns the version string of the {IRelayHub} for which this recipient implementation was built. If {_upgradeRelayHub} is used, the new {IRelayHub} instance should be compatible with this version.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawDeposits(uint256,address)\":{\"details\":\"Withdraws the recipient's deposits in `RelayHub`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/nathan/Workspace/animoca/f1dt/contracts_and_tokens_management/contracts/purchase/SimpleSale.sol\":\"SimpleSale\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/nathan/Workspace/animoca/f1dt/contracts_and_tokens_management/contracts/purchase/SimpleSale.sol\":{\"keccak256\":\"0xf1d9f0328e5ce9d9b9b7869e3a951b1a8df6d5ae656b3d4959ab753797616021\",\"urls\":[\"bzz-raw://94e467a350d781a70f9ed374b1f05836cec2b9dd1fcd4836e77af9ac60cab377\",\"dweb:/ipfs/QmW2pUE6UWFKXPdNTnLqn3xbUmEcUdo6RUMwoETqJopfQP\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"@openzeppelin/contracts/GSN/GSNRecipient.sol\":{\"keccak256\":\"0x9d9267b9b249d5040e706ae936fbbe8d80418a7eeb6286103ff85b57db0bea84\",\"urls\":[\"bzz-raw://624c1d98abb6ff21b773d8e327dbe4aaea1494e9f956ecbda1dc3286bcf26846\",\"dweb:/ipfs/QmdYcda4xspypcyKwJCSbT8Dq9cTcmpeNFLoyXmZgmW6WA\"]},\"@openzeppelin/contracts/GSN/IRelayHub.sol\":{\"keccak256\":\"0xe40a4875c43518eb0507b19bc4a3a72c01774c73f15188e549ada1ecc8898baf\",\"urls\":[\"bzz-raw://ce505b8a52dc44924ca700ce3909a7f764608f9c6317f5033966ec94fca3023b\",\"dweb:/ipfs/QmTysxtzyvNF3wazXAzYMUeSgQZEpPaVV2L1tbhAtmsVod\"]},\"@openzeppelin/contracts/GSN/IRelayRecipient.sol\":{\"keccak256\":\"0x88c5716536287306f923379dae33b5e5bdc21d70ec0c440109f866d7edab7ca3\",\"urls\":[\"bzz-raw://4c5c6649a7603fb414d84fefef259e44a512df3d738c56250da1c8fa0271dc4c\",\"dweb:/ipfs/QmQGquucxTmw2isWEUf2JY25hFd5DR4U88zW7xhw5UgV3q\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\",\"urls\":[\"bzz-raw://cf4c00fc3c37cc5acf0c82ec6fd97bab67d72c2567fdc0ebf023d9c09b30a08e\",\"dweb:/ipfs/Qmb7TChG6DsEDX7LooJ4vmxot19f7VXX8S1zUGPeJTWbwZ\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb15af804e2bc97db51e4e103f13de9fe13f87e6b835d7a88c897966c0e58506e\",\"urls\":[\"bzz-raw://1e8cff8437557fc915a3bed968fcd8f2df9809599e665ef69c2c9ce628548055\",\"dweb:/ipfs/QmP5spYP8vs2jvLF8zNrXUbqB79hMsoEvMHiLcBxerWKcm\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "247:5545:18:-;;;815:70:48;;;-1:-1:-1;;;;;;815:70:48;;;843:42;815:70;;;;797:82:18;;;;;;834:44;797:82;;;1041:149;5:2:-1;;;;30:1;27;20:12;5:2;1041:149:18;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1041:149:18;;;;;;;698:17:58;718:12;-1:-1:-1;;;;;718:10:58;:12;:::i;:::-;740:6;:18;;-1:-1:-1;;;;;;740:18:58;-1:-1:-1;;;;;740:18:58;;;;;;;773:43;;740:18;;-1:-1:-1;740:18:58;773:43;;740:6;;773:43;-1:-1:-1;1120:29:18;1136:12;-1:-1:-1;;;;;1120:15:18;:29;:::i;:::-;1159:11;:24;;-1:-1:-1;;;;;;1159:24:18;-1:-1:-1;;;;;1159:24:18;;;;;;;;;;-1:-1:-1;247:5545:18;;3814:210:48;3904:9;;3859:15;;-1:-1:-1;;;;;3904:9:48;3890:10;:23;3886:132;;-1:-1:-1;3936:10:48;3929:17;;3886:132;3984:23;-1:-1:-1;;;;;3984:21:48;:23;:::i;:::-;3977:30;;3886:132;3814:210;:::o;1196::18:-;1103:9:58;-1:-1:-1;;;;;1103:7:58;:9;:::i;:::-;1095:54;;;;;-1:-1:-1;;;1095:54:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1286:26:18;;1278:35;;;;;;-1:-1:-1;;;;;1331:29:18;;1355:4;1331:29;;1323:38;;;;;;1371:13;:28;;-1:-1:-1;;;;;;1371:28:18;-1:-1:-1;;;;;1371:28:18;;;;;;;;;;1196:210::o;7918:1250:48:-;7973:22;8780:18;8801:8;;8780:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;;;8835:8:48;9066:17;9060:24;-1:-1:-1;;;;;9056:73:48;;7918:1250;-1:-1:-1;;7918:1250:48:o;1250:92:58:-;1290:4;1329:6;;-1:-1:-1;;;;;1329:6:58;1313:12;-1:-1:-1;;;;;1313:10:58;:12;:::i;:::-;-1:-1:-1;;;;;1313:22:58;;1306:29;;1250:92;:::o;247:5545:18:-;;;;;;;",
  "deployedSourceMap": "247:5545:18:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1523:241;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1523:241:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1523:241:18;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;1523:241:18;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1523:241:18;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1523:241:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1523:241:18;;-1:-1:-1;;1523:241:18;;;-1:-1:-1;;;1523:241:18;;;;:::i;:::-;;1412:101;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1412:101:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1412:101:18;-1:-1:-1;;;;;1412:101:18;;:::i;918:36::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;918:36:18;;;:::i;:::-;;;;-1:-1:-1;;;;;918:36:18;;;;;;;;;;;;;;1770:1377;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;1770:1377:18;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;1770:1377:18;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1770:1377:18;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1770:1377:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1770:1377:18;;-1:-1:-1;;1770:1377:18;;;-1:-1:-1;;;1770:1377:18;;;-1:-1:-1;;;;;1770:1377:18;;:::i;1196:210::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1196:210:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1196:210:18;-1:-1:-1;;;;;1196:210:18;;:::i;1684:137:58:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1684:137:58;;;:::i;1406:85:48:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1406:85:48;;;:::i;4983:208::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4983:208:48;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4983:208:48;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;4983:208:48;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4983:208:48;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;4983:208:48;;-1:-1:-1;4983:208:48;-1:-1:-1;4983:208:48;:::i;:::-;;;;;;;;;;;;;;;;3402:1892:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3402:1892:18;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;3402:1892:18;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3402:1892:18;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3402:1892:18;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3402:1892:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3402:1892:18;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3402:1892:18;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3402:1892:18;;-1:-1:-1;3402:1892:18;-1:-1:-1;3402:1892:18;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3402:1892:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;899:77:58;;8:9:-1;5:2;;;30:1;27;20:12;5:2;899:77:58;;;:::i;1250:92::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1250:92:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;797:82:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;797:82:18;;;:::i;2637:227:48:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2637:227:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2637:227:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5657:133:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5657:133:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5657:133:18;;;;;;-1:-1:-1;;;;;5657:133:18;;:::i;5820:274:48:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5820:274:48;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;5820:274:48;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;5820:274:48;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5820:274:48;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;5820:274:48;;-1:-1:-1;5820:274:48;-1:-1:-1;5820:274:48;;;;;;;;;;;;;;:::i;961:39:18:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;961:39:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;961:39:18;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;961:39:18;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;961:39:18;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;961:39:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;961:39:18;;-1:-1:-1;961:39:18;;-1:-1:-1;;;;;961:39:18:i;:::-;;;;;;;;;;;;;;;;;;;;;;;886:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;886:26:18;;;:::i;1970:107:58:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1970:107:58;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1970:107:58;-1:-1:-1;;;;;1970:107:58;;:::i;1523:241:18:-;1103:9:58;:7;:9::i;:::-;1095:54;;;;;-1:-1:-1;;;1095:54:58;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1095:54:58;;;;;;;;;;;;;;;1659:32:18;;;;;;;;1665:8;1659:32;;;;1675:15;1659:32;;;1637:7;1645:10;1637:19;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1637:19:18;;;;;-1:-1:-1;1637:19:18;;;;;;;;;;;:54;;;;;;;;274:1:-1;1637:54:18;;;;;;;1706:51;;;;;;;;;;;;-1:-1:-1;;1706:51:18;;;;;;;;;;;;;;;;;;;;1637:19;;1706:51;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1706:51:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1523:241;;;:::o;1412:101::-;1103:9:58;:7;:9::i;:::-;1095:54;;;;;-1:-1:-1;;;1095:54:58;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1095:54:58;;;;;;;;;;;;;;;1482:11:18;:24;;-1:-1:-1;;;;;;1482:24:18;-1:-1:-1;;;;;1482:24:18;;;;;;;;;;1412:101::o;918:36::-;;;-1:-1:-1;;;;;918:36:18;;:::o;1770:1377::-;1960:1;1949:8;:12;1941:44;;;;;-1:-1:-1;;;1941:44:18;;;;;;;;;;;;-1:-1:-1;;;1941:44:18;;;;;;;;;;;;;;;2019:11;;-1:-1:-1;;;;;2003:27:18;;;2019:11;;2003:27;;:58;;-1:-1:-1;2050:11:18;;-1:-1:-1;;;;;2034:27:18;;;2050:11;;2034:27;2003:58;1995:96;;;;;-1:-1:-1;;;1995:96:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;2102:22;2127:12;:10;:12::i;:::-;2102:37;;2150:18;;:::i;:::-;2171:7;2179:10;2171:19;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;2171:19:18;;;;;-1:-1:-1;2171:19:18;;;;;;;;;;;2150:40;;;;;;;;;;274:1:-1;2150:40:18;;;;;;-1:-1:-1;;2221:11:18;;2171:19;;-1:-1:-1;;;;;;2221:11:18;;;2205:27;;;;2201:940;;;2256:14;;2248:52;;;;;-1:-1:-1;;;2248:52:18;;;;;;;;;;;;-1:-1:-1;;;2248:52:18;;;;;;;;;;;;;;;2332:14;;2314:15;;2332:28;;2351:8;2332:28;:18;:28;:::i;:::-;2314:46;;2395:10;2382:9;:23;;2374:52;;;;;-1:-1:-1;;;2374:52:18;;;;;;;;;;;;-1:-1:-1;;;2374:52:18;;;;;;;;;;;;;;;2440:13;;:34;;-1:-1:-1;;;;;2440:13:18;;;;:34;;;;;2463:10;;2440:13;:34;:13;:34;2463:10;2440:13;:34;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;2489:14:18;2506:25;:9;2520:10;2506:25;:13;:25;:::i;:::-;2489:42;-1:-1:-1;2549:10:18;;2545:72;;2579:23;;-1:-1:-1;;;;;2579:15:18;;;:23;;;;;2595:6;;2579:23;;;;2595:6;2579:15;:23;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2579:23:18;2545:72;2635:82;2645:10;2657:12;2671:5;:14;;;2687:8;2697:11;2710:6;2635:82;;;;;;;-1:-1:-1;;;;;2635:82:18;-1:-1:-1;;;;;2635:82:18;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2635:82:18;-1:-1:-1;;;;;2635:82:18;;;;;;-1:-1:-1;;;;;2635:82:18;-1:-1:-1;;;;;2635:82:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2635:82:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2201:940;;;;;2756:11;;-1:-1:-1;;;;;2756:11:18;2748:65;;;;;-1:-1:-1;;;2748:65:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;2835:16;;;;2827:49;;;;;-1:-1:-1;;;2827:49:18;;;;;;;;;;;;-1:-1:-1;;;2827:49:18;;;;;;;;;;;;;;;2908:16;;;;2890:15;;2908:30;;2929:8;2908:30;:20;:30;:::i;:::-;2966:11;;3000:13;;;2960:66;;;-1:-1:-1;;;2960:66:18;;-1:-1:-1;;;;;2960:66:18;;;;;;;;;;3000:13;;;2960:66;;;;;;;;;;;2890:48;;-1:-1:-1;2966:11:18;;;2960:31;;:66;;;;;;;;;;;;;;;2966:11;;2960:66;;;5:2:-1;;;;30:1;27;20:12;5:2;2960:66:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2960:66:18;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2960:66:18;2952:75;;;;;;3046:84;3056:10;3068:12;3082:5;:16;;;3100:8;3110:11;3123:6;3046:84;;;;;;;-1:-1:-1;;;;;3046:84:18;-1:-1:-1;;;;;3046:84:18;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3046:84:18;-1:-1:-1;;;;;3046:84:18;;;;;;-1:-1:-1;;;;;3046:84:18;-1:-1:-1;;;;;3046:84:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3046:84:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2201:940;;1770:1377;;;;;;:::o;1196:210::-;1103:9:58;:7;:9::i;:::-;1095:54;;;;;-1:-1:-1;;;1095:54:58;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1095:54:58;;;;;;;;;;;;;;;-1:-1:-1;;;;;1286:26:18;;1278:35;;;;;;-1:-1:-1;;;;;1331:29:18;;1355:4;1331:29;;1323:38;;;;;;1371:13;:28;;-1:-1:-1;;;;;;1371:28:18;-1:-1:-1;;;;;1371:28:18;;;;;;;;;;1196:210::o;1684:137:58:-;1103:9;:7;:9::i;:::-;1095:54;;;;;-1:-1:-1;;;1095:54:58;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1095:54:58;;;;;;;;;;;;;;;1782:1;1766:6;;1745:40;;-1:-1:-1;;;;;1766:6:58;;;;1745:40;;1782:1;;1745:40;1812:1;1795:19;;-1:-1:-1;;;;;;1795:19:58;;;1684:137::o;1406:85:48:-;1475:9;;-1:-1:-1;;;;;1475:9:48;1406:85;;:::o;4983:208::-;5049:7;5090:12;:10;:12::i;:::-;-1:-1:-1;;;;;5076:26:48;:10;-1:-1:-1;;;;;5076:26:48;;5068:75;;;;-1:-1:-1;;;5068:75:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5160:24;5176:7;;5160:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;5160:15:48;;-1:-1:-1;;;5160:24:48:i;:::-;5153:31;;4983:208;;;;;:::o;3402:1892:18:-;3778:7;3787:16;4215:15;4240:17;4267:24;4301:16;4327:20;4363:15;;4357:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;;;4432:2:18;4423:12;;4460:11;4492:12;;;4530:11;4562:13;;;4602:11;4634:13;;;4672:11;4704:13;;;4746:11;4423:12;;-1:-1:-1;4460:11:18;;-1:-1:-1;4530:11:18;;-1:-1:-1;4602:11:18;-1:-1:-1;4672:11:18;-1:-1:-1;4746:11:18;-1:-1:-1;5266:21:18;:19;:21::i;:::-;5259:28;;;;;;;;;3402:1892;;;;;;;;;;;;;;:::o;899:77:58:-;937:7;963:6;-1:-1:-1;;;;;963:6:58;899:77;:::o;1250:92::-;1290:4;1329:6;;-1:-1:-1;;;;;1329:6:58;1313:12;:10;:12::i;:::-;-1:-1:-1;;;;;1313:22:58;;1306:29;;1250:92;:::o;797:82:18:-;;;-1:-1:-1;;;;;797:82:18;;:::o;2637:227:48:-;2843:14;;;;;;;;;;;;-1:-1:-1;;;2843:14:48;;;;2637:227;:::o;5657:133:18:-;1103:9:58;:7;:9::i;:::-;1095:54;;;;;-1:-1:-1;;;1095:54:58;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1095:54:58;;;;;;;;;;;;;;;5751:32:18;5769:6;5777:5;5751:17;:32::i;:::-;5657:133;;:::o;5820:274:48:-;5965:12;:10;:12::i;:::-;-1:-1:-1;;;;;5951:26:48;:10;-1:-1:-1;;;;;5951:26:48;;5943:75;;;;-1:-1:-1;;;5943:75:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6028:59;6045:7;;6028:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;6054:7:48;;-1:-1:-1;6063:12:48;;-1:-1:-1;6077:9:48;;-1:-1:-1;6028:16:48;:59::i;:::-;5820:274;;;;;:::o;961:39:18:-;22:14:-1;;169:4;143:32;;;;;198:20;;961:39:18;224:31:-1;;156:18;;;283;;;;273:49;328:32;;961:39:18;;;;;;;;:::o;886:26::-;;;-1:-1:-1;;;;;886:26:18;;:::o;1970:107:58:-;1103:9;:7;:9::i;:::-;1095:54;;;;;-1:-1:-1;;;1095:54:58;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1095:54:58;;;;;;;;;;;;;;;2042:28;2061:8;2042:18;:28::i;:::-;1970:107;:::o;3814:210:48:-;3904:9;;3859:15;;-1:-1:-1;;;;;3904:9:48;3890:10;:23;3886:132;;-1:-1:-1;3936:10:48;3929:17;;3886:132;3984:23;:21;:23::i;:::-;3977:30;;;;2159:459:57;2217:7;2458:6;2454:45;;-1:-1:-1;2487:1:57;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;:1;2544:5;;;;;:10;2536:56;;;;-1:-1:-1;;;2536:56:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1274:134;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;5300:130:18:-;-1:-1:-1;5357:7:18;;5300:130::o;6688:124:48:-;6742:7;6751:12;6782:23;;;;;;;;;;;;;:19;:23::i;:::-;6775:30;;;;6688:124;;:::o;3052:136::-;3147:9;;3137:44;;;-1:-1:-1;;;3137:44:48;;;;;;;;-1:-1:-1;;;;;3137:44:48;;;;;;;;;3147:9;;;;;3137:29;;:44;;;;;3147:9;;3137:44;;;;;;;3147:9;;3137:44;;;5:2:-1;;;;30:1;27;20:12;5:2;3137:44:48;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5436:137:18;;;;;:::o;2178:225:58:-;-1:-1:-1;;;;;2251:22:58;;2243:73;;;;-1:-1:-1;;;2243:73:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2352:6;;;2331:38;;-1:-1:-1;;;;;2331:38:58;;;;2352:6;;;2331:38;;;2379:6;:17;;-1:-1:-1;;;;;;2379:17:58;-1:-1:-1;;;;;2379:17:58;;;;;;;;;;2178:225::o;7918:1250:48:-;7973:22;8780:18;8801:8;;8780:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;;;8835:8:48;9066:17;9060:24;-1:-1:-1;;;;;9056:73:48;;7918:1250;-1:-1:-1;;7918:1250:48:o;1732:187:57:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:57;;;1732:187::o;6974:153:48:-;7048:7;;6974:153::o;247:5545:18:-;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity = 0.5.16;\n\nimport \"@openzeppelin/contracts/ownership/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/GSN/GSNRecipient.sol\";\n\ncontract SimpleSale is Ownable, GSNRecipient {\n    using SafeMath for uint256;\n\n    enum ErrorCodes {\n        RESTRICTED_METHOD,\n        INSUFFICIENT_BALANCE\n    }\n\n    struct Price {\n        uint256 ethPrice;\n        uint256 erc20Price;\n    }\n\n    event Purchased(\n        string purchaseId,\n        address paymentToken,\n        uint256 price,\n        uint256 quantity,\n        address destination,\n        address operator\n    );\n\n    event PriceUpdated(\n        string purchaseId,\n        uint256 ethPrice,\n        uint256 erc20Price\n    );\n\n    address public ETH_ADDRESS = address(0x00eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee);\n\n    address public _erc20Token;\n    address payable public _payoutWallet;\n\n    mapping(string => Price) public _prices; //  purchaseId => price in tokens\n\n    constructor(address payable payoutWallet, address erc20Token) public {\n        setPayoutWallet(payoutWallet);\n        _erc20Token = erc20Token;\n    }\n\n    function setPayoutWallet(address payable payoutWallet) public onlyOwner {\n        require(payoutWallet != address(0));\n        require(payoutWallet != address(this));\n        _payoutWallet = payoutWallet;\n    }\n\n    function setErc20Token(address erc20Token) public onlyOwner {\n        _erc20Token = erc20Token;\n    }\n    \n    function setPrice(string memory purchaseId, uint256 ethPrice, uint256 erc20TokenPrice) public onlyOwner {\n        _prices[purchaseId] = Price(ethPrice, erc20TokenPrice);\n        emit PriceUpdated(purchaseId, ethPrice, erc20TokenPrice);\n    }\n\n    function purchaseFor(\n        address destination,\n        string memory purchaseId,\n        uint256 quantity,\n        address paymentToken\n    ) public payable {\n        require(quantity > 0, \"Quantity can't be 0\");\n        require(paymentToken == ETH_ADDRESS || paymentToken == _erc20Token, \"Unsupported payment token\");\n\n        address payable sender = _msgSender();\n\n        Price memory price = _prices[purchaseId];\n\n        if (paymentToken == ETH_ADDRESS) {\n            require(price.ethPrice != 0, \"purchaseId not found\");\n            uint totalPrice = price.ethPrice.mul(quantity);\n            require(msg.value >= totalPrice, \"Insufficient ETH\");\n            _payoutWallet.transfer(totalPrice);\n\n            uint256 change = msg.value.sub(totalPrice);\n            if (change > 0) {\n                sender.transfer(change);\n            }\n            emit Purchased(purchaseId, paymentToken, price.ethPrice, quantity, destination, sender);\n        } else {\n            require(_erc20Token != address(0), \"ERC20 payment not supported\");\n            require(price.erc20Price != 0, \"Price not found\");\n            uint totalPrice = price.erc20Price.mul(quantity);\n            require(ERC20(_erc20Token).transferFrom(sender, _payoutWallet, totalPrice));\n            emit Purchased(purchaseId, paymentToken, price.erc20Price, quantity, destination, sender);\n        }\n    }\n\n    /////////////////////////////////////////// GSNRecipient implementation ///////////////////////////////////\n    /**\n     * @dev Ensures that only users with enough gas payment token balance can have transactions relayed through the GSN.\n     */\n    function acceptRelayedCall(\n        address /*relay*/,\n        address /*from*/,\n        bytes calldata encodedFunction,\n        uint256 /*transactionFee*/,\n        uint256 /*gasPrice*/,\n        uint256 /*gasLimit*/,\n        uint256 /*nonce*/,\n        bytes calldata /*approvalData*/,\n        uint256 /*maxPossibleCharge*/\n    )\n        external\n        view\n        returns (uint256, bytes memory mem)\n    {\n        // restrict to burn function only\n        // load methodId stored in first 4 bytes https://solidity.readthedocs.io/en/v0.5.16/abi-spec.html#function-selector-and-argument-encoding\n        // load amount stored in the next 32 bytes https://solidity.readthedocs.io/en/v0.5.16/abi-spec.html#function-selector-and-argument-encoding\n        // 32 bytes offset is required to skip array length\n        bytes4 methodId;\n        address recipient;\n        string memory purchaseId;\n        uint256 quantity;\n        address paymentToken;\n        mem = encodedFunction;\n        assembly {\n            let dest := add(mem, 32)\n            methodId := mload(dest)\n            dest := add(dest, 4)\n            recipient := mload(dest)\n            dest := add(dest, 32)\n            purchaseId := mload(dest)\n            dest := add(dest, 32)\n            quantity := mload(dest)\n            dest := add(dest, 32)\n            paymentToken := mload(dest)\n        }\n\n        // bytes4(keccak256(\"purchaseFor(address,string,uint256,address)\")) == 0xwwwwww\n        // if (methodId != 0xwwwwww) {\n            // return _rejectRelayedCall(uint256(ErrorCodes.RESTRICTED_METHOD));\n        // }\n\n        // Check that user has enough balance\n        // if (balanceOf(from) < amountParam) {\n        //     return _rejectRelayedCall(uint256(ErrorCodes.INSUFFICIENT_BALANCE));\n        // }\n\n        //TODO restrict to purchaseFor() and add validation checks\n\n        return _approveRelayedCall();\n    }\n\n    function _preRelayedCall(bytes memory) internal returns (bytes32) {\n        // solhint-disable-previous-line no-empty-blocks\n    }\n\n    function _postRelayedCall(bytes memory, bool, uint256, bytes32) internal {\n        // solhint-disable-previous-line no-empty-blocks\n    }\n\n    /**\n     * @dev Withdraws the recipient's deposits in `RelayHub`.\n     */\n    function withdrawDeposits(uint256 amount, address payable payee) external onlyOwner {\n        _withdrawDeposits(amount, payee);\n    }\n}",
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-07-02T20:02:48.232Z",
  "devdoc": {
    "methods": {
      "acceptRelayedCall(address,address,bytes,uint256,uint256,uint256,uint256,bytes,uint256)": {
        "details": "Ensures that only users with enough gas payment token balance can have transactions relayed through the GSN."
      },
      "getHubAddr()": {
        "details": "Returns the address of the {IRelayHub} contract for this recipient."
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "postRelayedCall(bytes,bool,uint256,bytes32)": {
        "details": "See `IRelayRecipient.postRelayedCall`.     * This function should not be overriden directly, use `_postRelayedCall` instead.     * * Requirements:     * - the caller must be the `RelayHub` contract."
      },
      "preRelayedCall(bytes)": {
        "details": "See `IRelayRecipient.preRelayedCall`.     * This function should not be overriden directly, use `_preRelayedCall` instead.     * * Requirements:     * - the caller must be the `RelayHub` contract."
      },
      "relayHubVersion()": {
        "details": "Returns the version string of the {IRelayHub} for which this recipient implementation was built. If {_upgradeRelayHub} is used, the new {IRelayHub} instance should be compatible with this version."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdrawDeposits(uint256,address)": {
        "details": "Withdraws the recipient's deposits in `RelayHub`."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}
